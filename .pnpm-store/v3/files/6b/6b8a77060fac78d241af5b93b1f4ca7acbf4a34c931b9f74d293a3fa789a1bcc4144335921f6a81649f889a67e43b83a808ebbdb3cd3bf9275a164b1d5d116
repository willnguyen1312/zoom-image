{"version":3,"file":"hooks.module.js","sources":["../src/index.js"],"sourcesContent":["import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function (p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\tconst stateHooks = hookState._component.__hooks._list.filter(\n\t\t\t\t\tx => x._component\n\t\t\t\t);\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate || hookState._component.props !== p\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any, errorInfo: import('preact').ErrorInfo) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\nexport function useId() {\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal.d').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n"],"names":["currentIndex","currentComponent","previousComponent","prevRaf","currentHook","afterPaintEffects","EMPTY","oldBeforeDiff","options","__b","oldBeforeRender","__r","oldAfterDiff","diffed","oldCommit","__c","oldBeforeUnmount","unmount","getHookState","index","type","__h","hooks","__H","__","length","push","__V","useState","initialState","useReducer","invokeOrReturn","reducer","init","hookState","_reducer","undefined","action","currentValue","__N","nextValue","setState","_hasScuFromHooks","updateHookState","p","s","c","stateHooks","filter","x","every","prevScu","call","this","shouldUpdate","forEach","hookItem","props","shouldComponentUpdate","prevCWU","componentWillUpdate","__e","tmp","useEffect","callback","args","state","__s","argsChanged","_pendingArgs","useLayoutEffect","useRef","initialValue","useMemo","current","useImperativeHandle","ref","createHandle","concat","factory","useCallback","useContext","context","provider","sub","value","useDebugValue","formatter","useErrorBoundary","cb","errState","componentDidCatch","err","errorInfo","useId","root","__v","__m","mask","flushAfterPaintEffects","component","shift","__P","invokeCleanup","invokeEffect","e","vnode","requestAnimationFrame","afterNextFrame","commitQueue","some","hasErrored","HAS_RAF","raf","done","clearTimeout","timeout","cancelAnimationFrame","setTimeout","hook","comp","cleanup","oldArgs","newArgs","arg","f"],"mappings":"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"}