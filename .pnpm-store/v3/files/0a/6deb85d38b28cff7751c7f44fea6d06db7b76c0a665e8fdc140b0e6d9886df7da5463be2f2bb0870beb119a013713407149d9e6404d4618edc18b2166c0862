{"version":3,"sources":["container/TreeContainer/OrderedMap.js","../../src/container/TreeContainer/OrderedMap.ts"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__generator","thisArg","body","_","label","sent","t","trys","ops","f","y","g","next","verb","throw","return","Symbol","iterator","n","v","step","op","done","value","pop","length","push","e","TreeContainer","TreeIterator","throwIteratorAccessError","OrderedMapIterator","_super","node","header","container","iteratorType","_this","defineProperty","get","_node","_header","self","Proxy","props","_key","_value","set","newValue","enumerable","configurable","copy","OrderedMap","cmp","enableIndex","forEach","el","setElement","begin","_left","end","rBegin","_right","rEnd","front","_length","minNode","back","maxNode","lowerBound","key","resNode","_lowerBound","_root","upperBound","_upperBound","reverseLowerBound","_reverseLowerBound","reverseUpperBound","_reverseUpperBound","callback","_inOrderTraversal","index","map","hint","_set","getElementByPos","pos","RangeError","find","curNode","_getTreeNodeByKey","getElementByKey","union","other","nodeList","i","_a"],"mappings":"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","file":"OrderedMap.js","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport TreeContainer from './Base';\nimport TreeIterator from './Base/TreeIterator';\nimport $checkWithinAccessParams from \"../../utils/checkParams.macro\";\nimport { throwIteratorAccessError } from \"../../utils/throwError\";\nvar OrderedMapIterator = /** @class */ (function (_super) {\n    __extends(OrderedMapIterator, _super);\n    function OrderedMapIterator(node, header, container, iteratorType) {\n        var _this = _super.call(this, node, header, iteratorType) || this;\n        _this.container = container;\n        return _this;\n    }\n    Object.defineProperty(OrderedMapIterator.prototype, \"pointer\", {\n        get: function () {\n            if (this._node === this._header) {\n                throwIteratorAccessError();\n            }\n            var self = this;\n            return new Proxy([], {\n                get: function (_, props) {\n                    if (props === '0')\n                        return self._node._key;\n                    else if (props === '1')\n                        return self._node._value;\n                },\n                set: function (_, props, newValue) {\n                    if (props !== '1') {\n                        throw new TypeError('props must be 1');\n                    }\n                    self._node._value = newValue;\n                    return true;\n                }\n            });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    OrderedMapIterator.prototype.copy = function () {\n        return new OrderedMapIterator(this._node, this._header, this.container, this.iteratorType);\n    };\n    return OrderedMapIterator;\n}(TreeIterator));\nvar OrderedMap = /** @class */ (function (_super) {\n    __extends(OrderedMap, _super);\n    /**\n     * @param container - The initialization container.\n     * @param cmp - The compare function.\n     * @param enableIndex - Whether to enable iterator indexing function.\n     * @example\n     * new OrderedMap();\n     * new OrderedMap([[0, 1], [2, 1]]);\n     * new OrderedMap([[0, 1], [2, 1]], (x, y) => x - y);\n     * new OrderedMap([[0, 1], [2, 1]], (x, y) => x - y, true);\n     */\n    function OrderedMap(container, cmp, enableIndex) {\n        if (container === void 0) { container = []; }\n        var _this = _super.call(this, cmp, enableIndex) || this;\n        var self = _this;\n        container.forEach(function (el) {\n            self.setElement(el[0], el[1]);\n        });\n        return _this;\n    }\n    OrderedMap.prototype.begin = function () {\n        return new OrderedMapIterator(this._header._left || this._header, this._header, this);\n    };\n    OrderedMap.prototype.end = function () {\n        return new OrderedMapIterator(this._header, this._header, this);\n    };\n    OrderedMap.prototype.rBegin = function () {\n        return new OrderedMapIterator(this._header._right || this._header, this._header, this, 1 /* IteratorType.REVERSE */);\n    };\n    OrderedMap.prototype.rEnd = function () {\n        return new OrderedMapIterator(this._header, this._header, this, 1 /* IteratorType.REVERSE */);\n    };\n    OrderedMap.prototype.front = function () {\n        if (this._length === 0)\n            return;\n        var minNode = this._header._left;\n        return [minNode._key, minNode._value];\n    };\n    OrderedMap.prototype.back = function () {\n        if (this._length === 0)\n            return;\n        var maxNode = this._header._right;\n        return [maxNode._key, maxNode._value];\n    };\n    OrderedMap.prototype.lowerBound = function (key) {\n        var resNode = this._lowerBound(this._root, key);\n        return new OrderedMapIterator(resNode, this._header, this);\n    };\n    OrderedMap.prototype.upperBound = function (key) {\n        var resNode = this._upperBound(this._root, key);\n        return new OrderedMapIterator(resNode, this._header, this);\n    };\n    OrderedMap.prototype.reverseLowerBound = function (key) {\n        var resNode = this._reverseLowerBound(this._root, key);\n        return new OrderedMapIterator(resNode, this._header, this);\n    };\n    OrderedMap.prototype.reverseUpperBound = function (key) {\n        var resNode = this._reverseUpperBound(this._root, key);\n        return new OrderedMapIterator(resNode, this._header, this);\n    };\n    OrderedMap.prototype.forEach = function (callback) {\n        this._inOrderTraversal(function (node, index, map) {\n            callback([node._key, node._value], index, map);\n        });\n    };\n    /**\n     * @description Insert a key-value pair or set value by the given key.\n     * @param key - The key want to insert.\n     * @param value - The value want to set.\n     * @param hint - You can give an iterator hint to improve insertion efficiency.\n     * @return The size of container after setting.\n     * @example\n     * const mp = new OrderedMap([[2, 0], [4, 0], [5, 0]]);\n     * const iter = mp.begin();\n     * mp.setElement(1, 0);\n     * mp.setElement(3, 0, iter);  // give a hint will be faster.\n     */\n    OrderedMap.prototype.setElement = function (key, value, hint) {\n        return this._set(key, value, hint);\n    };\n    OrderedMap.prototype.getElementByPos = function (pos) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        var node = this._inOrderTraversal(pos);\n        return [node._key, node._value];\n    };\n    OrderedMap.prototype.find = function (key) {\n        var curNode = this._getTreeNodeByKey(this._root, key);\n        return new OrderedMapIterator(curNode, this._header, this);\n    };\n    /**\n     * @description Get the value of the element of the specified key.\n     * @param key - The specified key you want to get.\n     * @example\n     * const val = container.getElementByKey(1);\n     */\n    OrderedMap.prototype.getElementByKey = function (key) {\n        var curNode = this._getTreeNodeByKey(this._root, key);\n        return curNode._value;\n    };\n    OrderedMap.prototype.union = function (other) {\n        var self = this;\n        other.forEach(function (el) {\n            self.setElement(el[0], el[1]);\n        });\n        return this._length;\n    };\n    OrderedMap.prototype[Symbol.iterator] = function () {\n        var length, nodeList, i, node;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    length = this._length;\n                    nodeList = this._inOrderTraversal();\n                    i = 0;\n                    _a.label = 1;\n                case 1:\n                    if (!(i < length)) return [3 /*break*/, 4];\n                    node = nodeList[i];\n                    return [4 /*yield*/, [node._key, node._value]];\n                case 2:\n                    _a.sent();\n                    _a.label = 3;\n                case 3:\n                    ++i;\n                    return [3 /*break*/, 1];\n                case 4: return [2 /*return*/];\n            }\n        });\n    };\n    return OrderedMap;\n}(TreeContainer));\nexport default OrderedMap;\n","import TreeContainer from './Base';\nimport TreeIterator from './Base/TreeIterator';\nimport { TreeNode } from './Base/TreeNode';\nimport { initContainer, IteratorType } from '@/container/ContainerBase';\nimport $checkWithinAccessParams from '@/utils/checkParams.macro';\nimport { throwIteratorAccessError } from '@/utils/throwError';\n\nclass OrderedMapIterator<K, V> extends TreeIterator<K, V> {\n  container: OrderedMap<K, V>;\n  constructor(\n    node: TreeNode<K, V>,\n    header: TreeNode<K, V>,\n    container: OrderedMap<K, V>,\n    iteratorType?: IteratorType\n  ) {\n    super(node, header, iteratorType);\n    this.container = container;\n  }\n  get pointer() {\n    if (this._node === this._header) {\n      throwIteratorAccessError();\n    }\n    const self = this;\n    return new Proxy(<[K, V]><unknown>[], {\n      get(_, props: '0' | '1') {\n        if (props === '0') return self._node._key;\n        else if (props === '1') return self._node._value;\n      },\n      set(_, props: '1', newValue: V) {\n        if (props !== '1') {\n          throw new TypeError('props must be 1');\n        }\n        self._node._value = newValue;\n        return true;\n      }\n    });\n  }\n  copy() {\n    return new OrderedMapIterator<K, V>(\n      this._node,\n      this._header,\n      this.container,\n      this.iteratorType\n    );\n  }\n  // @ts-ignore\n  equals(iter: OrderedMapIterator<K, V>): boolean;\n}\n\nexport type { OrderedMapIterator };\n\nclass OrderedMap<K, V> extends TreeContainer<K, V> {\n  /**\n   * @param container - The initialization container.\n   * @param cmp - The compare function.\n   * @param enableIndex - Whether to enable iterator indexing function.\n   * @example\n   * new OrderedMap();\n   * new OrderedMap([[0, 1], [2, 1]]);\n   * new OrderedMap([[0, 1], [2, 1]], (x, y) => x - y);\n   * new OrderedMap([[0, 1], [2, 1]], (x, y) => x - y, true);\n   */\n  constructor(\n    container: initContainer<[K, V]> = [],\n    cmp?: (x: K, y: K) => number,\n    enableIndex?: boolean\n  ) {\n    super(cmp, enableIndex);\n    const self = this;\n    container.forEach(function (el) {\n      self.setElement(el[0], el[1]);\n    });\n  }\n  begin() {\n    return new OrderedMapIterator<K, V>(this._header._left || this._header, this._header, this);\n  }\n  end() {\n    return new OrderedMapIterator<K, V>(this._header, this._header, this);\n  }\n  rBegin() {\n    return new OrderedMapIterator<K, V>(\n      this._header._right || this._header,\n      this._header,\n      this,\n      IteratorType.REVERSE\n    );\n  }\n  rEnd() {\n    return new OrderedMapIterator<K, V>(this._header, this._header, this, IteratorType.REVERSE);\n  }\n  front() {\n    if (this._length === 0) return;\n    const minNode = this._header._left!;\n    return <[K, V]>[minNode._key, minNode._value];\n  }\n  back() {\n    if (this._length === 0) return;\n    const maxNode = this._header._right!;\n    return <[K, V]>[maxNode._key, maxNode._value];\n  }\n  lowerBound(key: K) {\n    const resNode = this._lowerBound(this._root, key);\n    return new OrderedMapIterator<K, V>(resNode, this._header, this);\n  }\n  upperBound(key: K) {\n    const resNode = this._upperBound(this._root, key);\n    return new OrderedMapIterator<K, V>(resNode, this._header, this);\n  }\n  reverseLowerBound(key: K) {\n    const resNode = this._reverseLowerBound(this._root, key);\n    return new OrderedMapIterator<K, V>(resNode, this._header, this);\n  }\n  reverseUpperBound(key: K) {\n    const resNode = this._reverseUpperBound(this._root, key);\n    return new OrderedMapIterator<K, V>(resNode, this._header, this);\n  }\n  forEach(callback: (element: [K, V], index: number, map: OrderedMap<K, V>) => void) {\n    this._inOrderTraversal(function (node, index, map) {\n      callback(<[K, V]>[node._key, node._value], index, map);\n    });\n  }\n  /**\n   * @description Insert a key-value pair or set value by the given key.\n   * @param key - The key want to insert.\n   * @param value - The value want to set.\n   * @param hint - You can give an iterator hint to improve insertion efficiency.\n   * @return The size of container after setting.\n   * @example\n   * const mp = new OrderedMap([[2, 0], [4, 0], [5, 0]]);\n   * const iter = mp.begin();\n   * mp.setElement(1, 0);\n   * mp.setElement(3, 0, iter);  // give a hint will be faster.\n   */\n  setElement(key: K, value: V, hint?: OrderedMapIterator<K, V>) {\n    return this._set(key, value, hint);\n  }\n  getElementByPos(pos: number) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    const node = this._inOrderTraversal(pos);\n    return <[K, V]>[node._key, node._value];\n  }\n  find(key: K) {\n    const curNode = this._getTreeNodeByKey(this._root, key);\n    return new OrderedMapIterator<K, V>(curNode, this._header, this);\n  }\n  /**\n   * @description Get the value of the element of the specified key.\n   * @param key - The specified key you want to get.\n   * @example\n   * const val = container.getElementByKey(1);\n   */\n  getElementByKey(key: K) {\n    const curNode = this._getTreeNodeByKey(this._root, key);\n    return curNode._value;\n  }\n  union(other: OrderedMap<K, V>) {\n    const self = this;\n    other.forEach(function (el) {\n      self.setElement(el[0], el[1]);\n    });\n    return this._length;\n  }\n  * [Symbol.iterator]() {\n    const length = this._length;\n    const nodeList = this._inOrderTraversal();\n    for (let i = 0; i < length; ++i) {\n      const node = nodeList[i];\n      yield <[K, V]>[node._key, node._value];\n    }\n  }\n  // @ts-ignore\n  eraseElementByIterator(iter: OrderedMapIterator<K, V>): OrderedMapIterator<K, V>;\n}\n\nexport default OrderedMap;\n"]}