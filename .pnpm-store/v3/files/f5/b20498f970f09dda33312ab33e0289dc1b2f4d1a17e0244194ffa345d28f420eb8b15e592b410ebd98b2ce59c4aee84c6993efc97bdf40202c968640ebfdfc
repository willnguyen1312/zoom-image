{"version":3,"sources":["container/SequentialContainer/Deque.js","../../src/container/SequentialContainer/Deque.ts"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__generator","thisArg","body","_","label","sent","t","trys","ops","f","y","g","next","verb","throw","return","Symbol","iterator","n","v","step","op","done","value","pop","length","push","e","__read","o","m","i","r","ar","error","__spreadArray","to","from","pack","arguments","l","slice","concat","SequentialContainer","RandomIterator","Math","DequeIterator","_super","node","container","iteratorType","_this","copy","_node","Deque","_bucketSize","_first","_curFirst","_last","_curLast","_bucketNum","_map","_length","size","ceil","needBucketNum","self","forEach","element","pushBack","_reAllocate","newMap","addBucketNum","_getElementIndex","pos","curNodeBucketIndex","curNodePointerIndex","index","floor","clear","begin","end","rBegin","rEnd","front","back","popBack","pushFront","popFront","getElementByPos","RangeError","_a","setElementByPos","insert","num","arr","cut","eraseElementByPos","length_1","curBucket","curPointer","_b","nextBucket","nextPointer","eraseElementByValue","eraseElementByIterator","iter","find","reverse","bucket","unique","pre","cur","sort","cmp","shrinkToFit","callback"],"mappings":"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","file":"Deque.js","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport SequentialContainer from './Base';\nimport { RandomIterator } from \"./Base/RandomIterator\";\nimport $checkWithinAccessParams from \"../../utils/checkParams.macro\";\nimport $getContainerSize from \"../../utils/getContainerSize.macro\";\nimport * as Math from \"../../utils/math\";\nvar DequeIterator = /** @class */ (function (_super) {\n    __extends(DequeIterator, _super);\n    function DequeIterator(node, container, iteratorType) {\n        var _this = _super.call(this, node, iteratorType) || this;\n        _this.container = container;\n        return _this;\n    }\n    DequeIterator.prototype.copy = function () {\n        return new DequeIterator(this._node, this.container, this.iteratorType);\n    };\n    return DequeIterator;\n}(RandomIterator));\nvar Deque = /** @class */ (function (_super) {\n    __extends(Deque, _super);\n    function Deque(container, _bucketSize) {\n        if (container === void 0) { container = []; }\n        if (_bucketSize === void 0) { _bucketSize = (1 << 12); }\n        var _this = _super.call(this) || this;\n        /**\n         * @internal\n         */\n        _this._first = 0;\n        /**\n         * @internal\n         */\n        _this._curFirst = 0;\n        /**\n         * @internal\n         */\n        _this._last = 0;\n        /**\n         * @internal\n         */\n        _this._curLast = 0;\n        /**\n         * @internal\n         */\n        _this._bucketNum = 0;\n        /**\n         * @internal\n         */\n        _this._map = [];\n        var _length = (function () {\n            if (typeof container.length === \"number\")\n                return container.length;\n            if (typeof container.size === \"number\")\n                return container.size;\n            if (typeof container.size === \"function\")\n                return container.size();\n            throw new TypeError(\"Cannot get the length or size of the container\");\n        })();\n        _this._bucketSize = _bucketSize;\n        _this._bucketNum = Math.ceil(_length, _this._bucketSize) || 1;\n        for (var i = 0; i < _this._bucketNum; ++i) {\n            _this._map.push(new Array(_this._bucketSize));\n        }\n        var needBucketNum = Math.ceil(_length, _this._bucketSize);\n        _this._first = _this._last = (_this._bucketNum >> 1) - (needBucketNum >> 1);\n        _this._curFirst = _this._curLast = (_this._bucketSize - _length % _this._bucketSize) >> 1;\n        var self = _this;\n        container.forEach(function (element) {\n            self.pushBack(element);\n        });\n        return _this;\n    }\n    /**\n     * @description Growth the Deque.\n     * @internal\n     */\n    Deque.prototype._reAllocate = function (needBucketNum) {\n        var newMap = [];\n        var addBucketNum = needBucketNum || this._bucketNum >> 1 || 1;\n        for (var i = 0; i < addBucketNum; ++i) {\n            newMap[i] = new Array(this._bucketSize);\n        }\n        for (var i = this._first; i < this._bucketNum; ++i) {\n            newMap[newMap.length] = this._map[i];\n        }\n        for (var i = 0; i < this._last; ++i) {\n            newMap[newMap.length] = this._map[i];\n        }\n        newMap[newMap.length] = __spreadArray([], __read(this._map[this._last]), false);\n        this._first = addBucketNum;\n        this._last = newMap.length - 1;\n        for (var i = 0; i < addBucketNum; ++i) {\n            newMap[newMap.length] = new Array(this._bucketSize);\n        }\n        this._map = newMap;\n        this._bucketNum = newMap.length;\n    };\n    /**\n     * @description Get the bucket position of the element and the pointer position by index.\n     * @param pos - The element's index.\n     * @internal\n     */\n    Deque.prototype._getElementIndex = function (pos) {\n        var curNodeBucketIndex, curNodePointerIndex;\n        var index = this._curFirst + pos;\n        curNodeBucketIndex = this._first + Math.floor(index / this._bucketSize);\n        if (curNodeBucketIndex >= this._bucketNum) {\n            curNodeBucketIndex -= this._bucketNum;\n        }\n        curNodePointerIndex = (index + 1) % this._bucketSize - 1;\n        if (curNodePointerIndex < 0) {\n            curNodePointerIndex = this._bucketSize - 1;\n        }\n        return { curNodeBucketIndex: curNodeBucketIndex, curNodePointerIndex: curNodePointerIndex };\n    };\n    Deque.prototype.clear = function () {\n        this._map = [new Array(this._bucketSize)];\n        this._bucketNum = 1;\n        this._first = this._last = this._length = 0;\n        this._curFirst = this._curLast = this._bucketSize >> 1;\n    };\n    Deque.prototype.begin = function () {\n        return new DequeIterator(0, this);\n    };\n    Deque.prototype.end = function () {\n        return new DequeIterator(this._length, this);\n    };\n    Deque.prototype.rBegin = function () {\n        return new DequeIterator(this._length - 1, this, 1 /* IteratorType.REVERSE */);\n    };\n    Deque.prototype.rEnd = function () {\n        return new DequeIterator(-1, this, 1 /* IteratorType.REVERSE */);\n    };\n    Deque.prototype.front = function () {\n        if (this._length === 0)\n            return;\n        return this._map[this._first][this._curFirst];\n    };\n    Deque.prototype.back = function () {\n        if (this._length === 0)\n            return;\n        return this._map[this._last][this._curLast];\n    };\n    Deque.prototype.pushBack = function (element) {\n        if (this._length) {\n            if (this._curLast < this._bucketSize - 1) {\n                this._curLast += 1;\n            }\n            else if (this._last < this._bucketNum - 1) {\n                this._last += 1;\n                this._curLast = 0;\n            }\n            else {\n                this._last = 0;\n                this._curLast = 0;\n            }\n            if (this._last === this._first &&\n                this._curLast === this._curFirst)\n                this._reAllocate();\n        }\n        this._length += 1;\n        this._map[this._last][this._curLast] = element;\n        return this._length;\n    };\n    Deque.prototype.popBack = function () {\n        if (this._length === 0)\n            return;\n        var value = this._map[this._last][this._curLast];\n        if (this._length !== 1) {\n            if (this._curLast > 0) {\n                this._curLast -= 1;\n            }\n            else if (this._last > 0) {\n                this._last -= 1;\n                this._curLast = this._bucketSize - 1;\n            }\n            else {\n                this._last = this._bucketNum - 1;\n                this._curLast = this._bucketSize - 1;\n            }\n        }\n        this._length -= 1;\n        return value;\n    };\n    /**\n     * @description Push the element to the front.\n     * @param element - The element you want to push.\n     * @returns The size of queue after pushing.\n     */\n    Deque.prototype.pushFront = function (element) {\n        if (this._length) {\n            if (this._curFirst > 0) {\n                this._curFirst -= 1;\n            }\n            else if (this._first > 0) {\n                this._first -= 1;\n                this._curFirst = this._bucketSize - 1;\n            }\n            else {\n                this._first = this._bucketNum - 1;\n                this._curFirst = this._bucketSize - 1;\n            }\n            if (this._first === this._last &&\n                this._curFirst === this._curLast)\n                this._reAllocate();\n        }\n        this._length += 1;\n        this._map[this._first][this._curFirst] = element;\n        return this._length;\n    };\n    /**\n     * @description Remove the _first element.\n     * @returns The element you popped.\n     */\n    Deque.prototype.popFront = function () {\n        if (this._length === 0)\n            return;\n        var value = this._map[this._first][this._curFirst];\n        if (this._length !== 1) {\n            if (this._curFirst < this._bucketSize - 1) {\n                this._curFirst += 1;\n            }\n            else if (this._first < this._bucketNum - 1) {\n                this._first += 1;\n                this._curFirst = 0;\n            }\n            else {\n                this._first = 0;\n                this._curFirst = 0;\n            }\n        }\n        this._length -= 1;\n        return value;\n    };\n    Deque.prototype.getElementByPos = function (pos) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        var _a = this._getElementIndex(pos), curNodeBucketIndex = _a.curNodeBucketIndex, curNodePointerIndex = _a.curNodePointerIndex;\n        return this._map[curNodeBucketIndex][curNodePointerIndex];\n    };\n    Deque.prototype.setElementByPos = function (pos, element) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        var _a = this._getElementIndex(pos), curNodeBucketIndex = _a.curNodeBucketIndex, curNodePointerIndex = _a.curNodePointerIndex;\n        this._map[curNodeBucketIndex][curNodePointerIndex] = element;\n    };\n    Deque.prototype.insert = function (pos, element, num) {\n        if (num === void 0) { num = 1; }\n        var length = this._length;\n        if (pos < 0 || pos > length) {\n            throw new RangeError();\n        }\n        if (pos === 0) {\n            while (num--)\n                this.pushFront(element);\n        }\n        else if (pos === this._length) {\n            while (num--)\n                this.pushBack(element);\n        }\n        else {\n            var arr = [];\n            for (var i = pos; i < this._length; ++i) {\n                arr.push(this.getElementByPos(i));\n            }\n            this.cut(pos - 1);\n            for (var i = 0; i < num; ++i)\n                this.pushBack(element);\n            for (var i = 0; i < arr.length; ++i)\n                this.pushBack(arr[i]);\n        }\n        return this._length;\n    };\n    /**\n     * @description Remove all elements after the specified position (excluding the specified position).\n     * @param pos - The previous position of the first removed element.\n     * @returns The size of the container after cutting.\n     * @example\n     * deque.cut(1); // Then deque's size will be 2. deque -> [0, 1]\n     */\n    Deque.prototype.cut = function (pos) {\n        if (pos < 0) {\n            this.clear();\n            return 0;\n        }\n        var _a = this._getElementIndex(pos), curNodeBucketIndex = _a.curNodeBucketIndex, curNodePointerIndex = _a.curNodePointerIndex;\n        this._last = curNodeBucketIndex;\n        this._curLast = curNodePointerIndex;\n        this._length = pos + 1;\n        return this._length;\n    };\n    Deque.prototype.eraseElementByPos = function (pos) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        if (pos === 0)\n            this.popFront();\n        else if (pos === this._length - 1)\n            this.popBack();\n        else {\n            var length_1 = this._length - 1;\n            var _a = this._getElementIndex(pos), curBucket = _a.curNodeBucketIndex, curPointer = _a.curNodePointerIndex;\n            for (var i = pos; i < length_1; ++i) {\n                var _b = this._getElementIndex(pos + 1), nextBucket = _b.curNodeBucketIndex, nextPointer = _b.curNodePointerIndex;\n                this._map[curBucket][curPointer] = this._map[nextBucket][nextPointer];\n                curBucket = nextBucket;\n                curPointer = nextPointer;\n            }\n            this.popBack();\n        }\n        return this._length;\n    };\n    Deque.prototype.eraseElementByValue = function (value) {\n        var length = this._length;\n        if (length === 0)\n            return 0;\n        var i = 0;\n        var index = 0;\n        while (i < length) {\n            var element = this.getElementByPos(i);\n            if (element !== value) {\n                this.setElementByPos(index, element);\n                index += 1;\n            }\n            i += 1;\n        }\n        this.cut(index - 1);\n        return this._length;\n    };\n    Deque.prototype.eraseElementByIterator = function (iter) {\n        var _node = iter._node;\n        this.eraseElementByPos(_node);\n        iter = iter.next();\n        return iter;\n    };\n    Deque.prototype.find = function (element) {\n        for (var i = 0; i < this._length; ++i) {\n            if (this.getElementByPos(i) === element) {\n                return new DequeIterator(i, this);\n            }\n        }\n        return this.end();\n    };\n    Deque.prototype.reverse = function () {\n        this._map.reverse().forEach(function (bucket) {\n            bucket.reverse();\n        });\n        var _a = this, _first = _a._first, _last = _a._last, _curFirst = _a._curFirst, _curLast = _a._curLast;\n        this._first = this._bucketNum - _last - 1;\n        this._last = this._bucketNum - _first - 1;\n        this._curFirst = this._bucketSize - _curLast - 1;\n        this._curLast = this._bucketSize - _curFirst - 1;\n        return this;\n    };\n    Deque.prototype.unique = function () {\n        if (this._length <= 1) {\n            return this._length;\n        }\n        var index = 1;\n        var pre = this.getElementByPos(0);\n        for (var i = 1; i < this._length; ++i) {\n            var cur = this.getElementByPos(i);\n            if (cur !== pre) {\n                pre = cur;\n                this.setElementByPos(index++, cur);\n            }\n        }\n        this.cut(index - 1);\n        return this._length;\n    };\n    Deque.prototype.sort = function (cmp) {\n        var arr = [];\n        for (var i = 0; i < this._length; ++i) {\n            arr.push(this.getElementByPos(i));\n        }\n        arr.sort(cmp);\n        for (var i = 0; i < this._length; ++i) {\n            this.setElementByPos(i, arr[i]);\n        }\n        return this;\n    };\n    /**\n     * @description Remove as much useless space as possible.\n     */\n    Deque.prototype.shrinkToFit = function () {\n        if (this._length === 0)\n            return;\n        var newMap = [];\n        if (this._first === this._last)\n            return;\n        else if (this._first < this._last) {\n            for (var i = this._first; i <= this._last; ++i) {\n                newMap.push(this._map[i]);\n            }\n        }\n        else {\n            for (var i = this._first; i < this._bucketNum; ++i) {\n                newMap.push(this._map[i]);\n            }\n            for (var i = 0; i <= this._last; ++i) {\n                newMap.push(this._map[i]);\n            }\n        }\n        this._first = 0;\n        this._last = newMap.length - 1;\n        this._map = newMap;\n    };\n    Deque.prototype.forEach = function (callback) {\n        for (var i = 0; i < this._length; ++i) {\n            callback(this.getElementByPos(i), i, this);\n        }\n    };\n    Deque.prototype[Symbol.iterator] = function () {\n        var i;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    i = 0;\n                    _a.label = 1;\n                case 1:\n                    if (!(i < this._length)) return [3 /*break*/, 4];\n                    return [4 /*yield*/, this.getElementByPos(i)];\n                case 2:\n                    _a.sent();\n                    _a.label = 3;\n                case 3:\n                    ++i;\n                    return [3 /*break*/, 1];\n                case 4: return [2 /*return*/];\n            }\n        });\n    };\n    return Deque;\n}(SequentialContainer));\nexport default Deque;\n","import SequentialContainer from './Base';\nimport { IteratorType, initContainer } from '@/container/ContainerBase';\nimport { RandomIterator } from '@/container/SequentialContainer/Base/RandomIterator';\nimport $checkWithinAccessParams from '@/utils/checkParams.macro';\nimport $getContainerSize from '@/utils/getContainerSize.macro';\nimport * as Math from '@/utils/math';\n\nclass DequeIterator<T> extends RandomIterator<T> {\n  readonly container: Deque<T>;\n  constructor(node: number, container: Deque<T>, iteratorType?: IteratorType) {\n    super(node, iteratorType);\n    this.container = container;\n  }\n  copy() {\n    return new DequeIterator<T>(this._node, this.container, this.iteratorType);\n  }\n  // @ts-ignore\n  equals(iter: DequeIterator<T>): boolean;\n}\n\nexport type { DequeIterator };\n\nclass Deque<T> extends SequentialContainer<T> {\n  /**\n   * @internal\n   */\n  private _first = 0;\n  /**\n   * @internal\n   */\n  private _curFirst = 0;\n  /**\n   * @internal\n   */\n  private _last = 0;\n  /**\n   * @internal\n   */\n  private _curLast = 0;\n  /**\n   * @internal\n   */\n  private _bucketNum = 0;\n  /**\n   * @internal\n   */\n  private readonly _bucketSize: number;\n  /**\n   * @internal\n   */\n  private _map: T[][] = [];\n  constructor(container: initContainer<T> = [], _bucketSize = (1 << 12)) {\n    super();\n    const _length = $getContainerSize!(container);\n    this._bucketSize = _bucketSize;\n    this._bucketNum = Math.ceil(_length, this._bucketSize) || 1;\n    for (let i = 0; i < this._bucketNum; ++i) {\n      this._map.push(new Array(this._bucketSize));\n    }\n    const needBucketNum = Math.ceil(_length, this._bucketSize);\n    this._first = this._last = (this._bucketNum >> 1) - (needBucketNum >> 1);\n    this._curFirst = this._curLast = (this._bucketSize - _length % this._bucketSize) >> 1;\n    const self = this;\n    container.forEach(function (element) {\n      self.pushBack(element);\n    });\n  }\n  /**\n   * @description Growth the Deque.\n   * @internal\n   */\n  private _reAllocate(needBucketNum?: number) {\n    const newMap = [];\n    const addBucketNum = needBucketNum || this._bucketNum >> 1 || 1;\n    for (let i = 0; i < addBucketNum; ++i) {\n      newMap[i] = new Array(this._bucketSize);\n    }\n    for (let i = this._first; i < this._bucketNum; ++i) {\n      newMap[newMap.length] = this._map[i];\n    }\n    for (let i = 0; i < this._last; ++i) {\n      newMap[newMap.length] = this._map[i];\n    }\n    newMap[newMap.length] = [...this._map[this._last]];\n    this._first = addBucketNum;\n    this._last = newMap.length - 1;\n    for (let i = 0; i < addBucketNum; ++i) {\n      newMap[newMap.length] = new Array(this._bucketSize);\n    }\n    this._map = newMap;\n    this._bucketNum = newMap.length;\n  }\n  /**\n   * @description Get the bucket position of the element and the pointer position by index.\n   * @param pos - The element's index.\n   * @internal\n   */\n  private _getElementIndex(pos: number) {\n    let curNodeBucketIndex, curNodePointerIndex;\n    const index = this._curFirst + pos;\n    curNodeBucketIndex = this._first + Math.floor(index / this._bucketSize);\n    if (curNodeBucketIndex >= this._bucketNum) {\n      curNodeBucketIndex -= this._bucketNum;\n    }\n    curNodePointerIndex = (index + 1) % this._bucketSize - 1;\n    if (curNodePointerIndex < 0) {\n      curNodePointerIndex = this._bucketSize - 1;\n    }\n    return { curNodeBucketIndex, curNodePointerIndex };\n  }\n  clear() {\n    this._map = [new Array(this._bucketSize)];\n    this._bucketNum = 1;\n    this._first = this._last = this._length = 0;\n    this._curFirst = this._curLast = this._bucketSize >> 1;\n  }\n  begin() {\n    return new DequeIterator<T>(0, this);\n  }\n  end() {\n    return new DequeIterator<T>(this._length, this);\n  }\n  rBegin() {\n    return new DequeIterator<T>(this._length - 1, this, IteratorType.REVERSE);\n  }\n  rEnd() {\n    return new DequeIterator<T>(-1, this, IteratorType.REVERSE);\n  }\n  front(): T | undefined {\n    if (this._length === 0) return;\n    return this._map[this._first][this._curFirst];\n  }\n  back(): T | undefined {\n    if (this._length === 0) return;\n    return this._map[this._last][this._curLast];\n  }\n  pushBack(element: T) {\n    if (this._length) {\n      if (this._curLast < this._bucketSize - 1) {\n        this._curLast += 1;\n      } else if (this._last < this._bucketNum - 1) {\n        this._last += 1;\n        this._curLast = 0;\n      } else {\n        this._last = 0;\n        this._curLast = 0;\n      }\n      if (\n        this._last === this._first &&\n        this._curLast === this._curFirst\n      ) this._reAllocate();\n    }\n    this._length += 1;\n    this._map[this._last][this._curLast] = element;\n    return this._length;\n  }\n  popBack() {\n    if (this._length === 0) return;\n    const value = this._map[this._last][this._curLast];\n    if (this._length !== 1) {\n      if (this._curLast > 0) {\n        this._curLast -= 1;\n      } else if (this._last > 0) {\n        this._last -= 1;\n        this._curLast = this._bucketSize - 1;\n      } else {\n        this._last = this._bucketNum - 1;\n        this._curLast = this._bucketSize - 1;\n      }\n    }\n    this._length -= 1;\n    return value;\n  }\n  /**\n   * @description Push the element to the front.\n   * @param element - The element you want to push.\n   * @returns The size of queue after pushing.\n   */\n  pushFront(element: T) {\n    if (this._length) {\n      if (this._curFirst > 0) {\n        this._curFirst -= 1;\n      } else if (this._first > 0) {\n        this._first -= 1;\n        this._curFirst = this._bucketSize - 1;\n      } else {\n        this._first = this._bucketNum - 1;\n        this._curFirst = this._bucketSize - 1;\n      }\n      if (\n        this._first === this._last &&\n        this._curFirst === this._curLast\n      ) this._reAllocate();\n    }\n    this._length += 1;\n    this._map[this._first][this._curFirst] = element;\n    return this._length;\n  }\n  /**\n   * @description Remove the _first element.\n   * @returns The element you popped.\n   */\n  popFront() {\n    if (this._length === 0) return;\n    const value = this._map[this._first][this._curFirst];\n    if (this._length !== 1) {\n      if (this._curFirst < this._bucketSize - 1) {\n        this._curFirst += 1;\n      } else if (this._first < this._bucketNum - 1) {\n        this._first += 1;\n        this._curFirst = 0;\n      } else {\n        this._first = 0;\n        this._curFirst = 0;\n      }\n    }\n    this._length -= 1;\n    return value;\n  }\n  getElementByPos(pos: number): T {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    const {\n      curNodeBucketIndex,\n      curNodePointerIndex\n    } = this._getElementIndex(pos);\n    return this._map[curNodeBucketIndex][curNodePointerIndex]!;\n  }\n  setElementByPos(pos: number, element: T) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    const {\n      curNodeBucketIndex,\n      curNodePointerIndex\n    } = this._getElementIndex(pos);\n    this._map[curNodeBucketIndex][curNodePointerIndex] = element;\n  }\n  insert(pos: number, element: T, num = 1) {\n    const length = this._length;\n    $checkWithinAccessParams!(pos, 0, length);\n    if (pos === 0) {\n      while (num--) this.pushFront(element);\n    } else if (pos === this._length) {\n      while (num--) this.pushBack(element);\n    } else {\n      const arr: T[] = [];\n      for (let i = pos; i < this._length; ++i) {\n        arr.push(this.getElementByPos(i));\n      }\n      this.cut(pos - 1);\n      for (let i = 0; i < num; ++i) this.pushBack(element);\n      for (let i = 0; i < arr.length; ++i) this.pushBack(arr[i]);\n    }\n    return this._length;\n  }\n  /**\n   * @description Remove all elements after the specified position (excluding the specified position).\n   * @param pos - The previous position of the first removed element.\n   * @returns The size of the container after cutting.\n   * @example\n   * deque.cut(1); // Then deque's size will be 2. deque -> [0, 1]\n   */\n  cut(pos: number) {\n    if (pos < 0) {\n      this.clear();\n      return 0;\n    }\n    const {\n      curNodeBucketIndex,\n      curNodePointerIndex\n    } = this._getElementIndex(pos);\n    this._last = curNodeBucketIndex;\n    this._curLast = curNodePointerIndex;\n    this._length = pos + 1;\n    return this._length;\n  }\n  eraseElementByPos(pos: number) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    if (pos === 0) this.popFront();\n    else if (pos === this._length - 1) this.popBack();\n    else {\n      const length = this._length - 1;\n      let {\n        curNodeBucketIndex: curBucket,\n        curNodePointerIndex: curPointer\n      } = this._getElementIndex(pos);\n      for (let i = pos; i < length; ++i) {\n        const {\n          curNodeBucketIndex: nextBucket,\n          curNodePointerIndex: nextPointer\n        } = this._getElementIndex(pos + 1);\n        this._map[curBucket][curPointer] = this._map[nextBucket][nextPointer];\n        curBucket = nextBucket;\n        curPointer = nextPointer;\n      }\n      this.popBack();\n    }\n    return this._length;\n  }\n  eraseElementByValue(value: T) {\n    const length = this._length;\n    if (length === 0) return 0;\n    let i = 0;\n    let index = 0;\n    while (i < length) {\n      const element = this.getElementByPos(i);\n      if (element !== value) {\n        this.setElementByPos(index, element!);\n        index += 1;\n      }\n      i += 1;\n    }\n    this.cut(index - 1);\n    return this._length;\n  }\n  eraseElementByIterator(iter: DequeIterator<T>) {\n    const _node = iter._node;\n    this.eraseElementByPos(_node);\n    iter = iter.next();\n    return iter;\n  }\n  find(element: T) {\n    for (let i = 0; i < this._length; ++i) {\n      if (this.getElementByPos(i) === element) {\n        return new DequeIterator<T>(i, this);\n      }\n    }\n    return this.end();\n  }\n  reverse() {\n    this._map.reverse().forEach(function (bucket) {\n      bucket.reverse();\n    });\n    const { _first, _last, _curFirst, _curLast } = this;\n    this._first = this._bucketNum - _last - 1;\n    this._last = this._bucketNum - _first - 1;\n    this._curFirst = this._bucketSize - _curLast - 1;\n    this._curLast = this._bucketSize - _curFirst - 1;\n    return this;\n  }\n  unique() {\n    if (this._length <= 1) {\n      return this._length;\n    }\n    let index = 1;\n    let pre = this.getElementByPos(0);\n    for (let i = 1; i < this._length; ++i) {\n      const cur = this.getElementByPos(i);\n      if (cur !== pre) {\n        pre = cur;\n        this.setElementByPos(index++, cur);\n      }\n    }\n    this.cut(index - 1);\n    return this._length;\n  }\n  sort(cmp?: (x: T, y: T) => number) {\n    const arr: T[] = [];\n    for (let i = 0; i < this._length; ++i) {\n      arr.push(this.getElementByPos(i));\n    }\n    arr.sort(cmp);\n    for (let i = 0; i < this._length; ++i) {\n      this.setElementByPos(i, arr[i]);\n    }\n    return this;\n  }\n  /**\n   * @description Remove as much useless space as possible.\n   */\n  shrinkToFit() {\n    if (this._length === 0) return;\n    const newMap = [];\n    if (this._first === this._last) return;\n    else if (this._first < this._last) {\n      for (let i = this._first; i <= this._last; ++i) {\n        newMap.push(this._map[i]);\n      }\n    } else {\n      for (let i = this._first; i < this._bucketNum; ++i) {\n        newMap.push(this._map[i]);\n      }\n      for (let i = 0; i <= this._last; ++i) {\n        newMap.push(this._map[i]);\n      }\n    }\n    this._first = 0;\n    this._last = newMap.length - 1;\n    this._map = newMap;\n  }\n  forEach(callback: (element: T, index: number, deque: Deque<T>) => void) {\n    for (let i = 0; i < this._length; ++i) {\n      callback(this.getElementByPos(i), i, this);\n    }\n  }\n  * [Symbol.iterator]() {\n    for (let i = 0; i < this._length; ++i) {\n      yield this.getElementByPos(i);\n    }\n  }\n}\n\nexport default Deque;\n"]}